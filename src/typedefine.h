/***************************************************************/
/*                                                             */
/*      PROJECT NAME :  RobotCore1Framework                    */
/*      FILE         :  typedefine.h                           */
/*      DESCRIPTION  :  Aliases of Integer Type                */
/*      CPU SERIES   :  RX600                                  */
/*      CPU TYPE     :  RX63T                                  */
/*                                                             */
/*      This file is generated by e2 studio.                   */
/*                                                             */
/***************************************************************/                              
                                                                           
                                                                           
                                                                           
                                                                            
/*********************************************************************
*
* Device     : RX
*
* File Name  : typedefine.h
*
* Abstract   : Aliases of Integer Type.
*
* History    : 1.00  (2009-08-07)
*
* NOTE       : THIS IS A TYPICAL EXAMPLE.
*
* Copyright (C) 2009 Renesas Electronics Corporation.
* and Renesas Solutions Corporation. All rights reserved.
*
*********************************************************************/

#ifndef TYPEDEFINE_H
#define TYPEDEFINE_H

typedef signed char _SBYTE;
typedef unsigned char _UBYTE;
typedef signed short _SWORD;
typedef unsigned short _UWORD;
typedef signed int _SINT;
typedef unsigned int _UINT;
typedef signed long _SDWORD;
typedef unsigned long _UDWORD;
typedef signed long long _SQWORD;
typedef unsigned long long _UQWORD;

typedef void(*InterruptCallback)(void);

typedef enum
{
	ForceByHost     		= 0x0,
	LookByHost      		= 0x1,
	Free            		= 0x2,
	ConnectToHardwarePort 	= 0x3
} ModulePortState;

typedef enum
{
	RobotCore		= 0x0,
	MatStudio		= 0x1
} SetBy;

typedef enum
{
	False			= 0x0,
	True			= 0x1
} BOOL;

typedef enum
{
	IN				= 0x0,
	OUT				= 0x1
} IOMode;

typedef enum
{
	L				= 0x0,
	H				= 0x1
} LogicLevel;

typedef struct
{
	_UDWORD Time;

	union
	{
		_UWORD WORD;
		struct
		{
			BOOL UpArrow:1;
			BOOL DownArrow:1;
			BOOL RightArrow:1;
			BOOL LeftArrow:1;
			BOOL Sankaku:1;
			BOOL Batsu:1;
			BOOL Maru:1;
			BOOL dummy:1;
			BOOL Shikaku:1;
			BOOL L1:1;
			BOOL L2:1;
			BOOL R1:1;
			BOOL R2:1;
			BOOL Start:1;
			BOOL Select:1;
		}BIT;
	} Buttons;

	struct
	{
		_SBYTE X;
		_SBYTE Y;
	} AnalogL;

	struct
	{
		_SBYTE X;
		_SBYTE Y;
	} AnalogR;
} DUALSHOCK3;

typedef struct
{
	_UDWORD Time;
	_UWORD ErrorNumber;
} Log;

#endif

